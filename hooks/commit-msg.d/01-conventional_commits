#!/usr/bin/env python3

"""
Author: Kai Blume
Date Created: 19.10.2023
Date Modified: 19.10.2023
Version: 1.0

Description: 
This script is a Git commit message hook that enforces the Conventional Commit standard for commit messages.
"""

import re
import sys

# Define regular expressions
commit_types = "(chore|docs|feat|fix|refactor|style|test|wip|merge)"
conventional_commit_regex = rf"^{commit_types}(\([a-z \-]+\))?!?: .+"

# Get the commit message from the provided file path (passed as an argument)
try:
    with open(sys.argv[1], "r") as file:
        commit_message = file.read()
except FileNotFoundError:
    sys.exit(1)

# Check the message using the regular expression
if re.match(conventional_commit_regex, commit_message):
    # Check the length of each line in the commit message
    for line in commit_message.splitlines():
        if len(line) > 72:
            # The commit message has a line that is longer than 50 characters, so reject the commit
            print("The commit message has a line that is longer than 72 characters.")
            sys.exit(1)

    print(
        "\x1b[32mCommit message meets Conventional Commit standards and has a maximum of 72 characters per line...\x1b[0m"
    )
    sys.exit(0)
else:
    # This is not a conventional commit, show an example and link to the spec.
    print("The commit message does not meet the Conventional Commit standard")
    print("An example of a valid message is:")
    print("  feat(login): add the start button")
    print("More details at: https://www.conventionalcommits.org/en/v1.0.0/#summary")
    print("***********************************************************************")
    print("Here are the list of message types:" + commit_types)
    print(
        "type: description (Max 50 characters), e.g., fix: invalid request for login API"
    )
    print(
        "type(scope): description (Max 50 characters) â€” (scope) is optional, e.g., fix(user): email address is empty on profile API"
    )
    print("***********************************************************************")
    sys.exit(1)
